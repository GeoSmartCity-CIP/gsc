package it.sinergis.gsc.model;

// Generated Aug 5, 2016 5:19:16 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Buildings generated by hbm2java
 */
@Entity
@Table(name = "BUILDINGS")
public class Buildings implements java.io.Serializable {
	
	private Set<BuildingsElevationT> buildingsElevationTs = new HashSet<BuildingsElevationT>(0);
	private Set<BuildingsEnergyamountT> buildingsEnergyamountTs = new HashSet<BuildingsEnergyamountT>(0);
	private Set<BuildingsEnergyPerformanceT> buildingsEnergyPerformanceTs = new HashSet<BuildingsEnergyPerformanceT>(0);
	private Set<BuildingsExtRefT> buildingsExtRefTs = new HashSet<BuildingsExtRefT>(0);
	private Set<BuildingsFacadeMat> buildingsFacadeMats = new HashSet<BuildingsFacadeMat>(0);
	private Set<BuildingsRenewablePotentiaT> buildingsRenewablePotentiaTs = new HashSet<BuildingsRenewablePotentiaT>(0);
	private Set<BuildingsRoofMat> buildingsRoofMats = new HashSet<BuildingsRoofMat>(0);
	private Set<BuildingsStructureMat> buildingsStructureMats = new HashSet<BuildingsStructureMat>(0);
	private Set<BuildingsUseMT> buildingsUseMTs = new HashSet<BuildingsUseMT>(0);
	private Character connectionElectricity;
	private Character connectionGas;
	private Character connectionSewage;
	private Character connectionThermal;
	private Character connectionWater;
	private Long dateCBeginning;
	private Long dateCEnd;
	private Long dateRBeginning;
	private Long dateREnd;
	private DBuildingnature DBuildingnature;
	private DBuildingtype DBuildingtype;
	private DConditionofconstruction DConditionofconstruction;
	private DElevationreference DElevationreferenceByElevRef;
	private DElevationreference DElevationreferenceByHeightHeightLow;
	private DElevationreference DElevationreferenceByHeightHeightRef;
	private DHeightstatus DHeightstatus;
	private String distFloor;
	private DRefurbishmentlevel DRefurbishmentlevel;
	private DRooftype DRooftype;
	private Long floors;
	//private Serializable geometry2d;
	private HCurrentuse HCurrentuse;
	private Double heightHeightVal;
	private Double HFloor;
	private HOwnershiptype HOwnershiptype;
	private String identifierIdLoc;
	private String identifierIdName;
	private String identifierIdVers;
	private Set<Installation> installations = new HashSet<Installation>(0);
	private Character instMeter;
	private Character instPhotov;
	private Character instSolar;
	private Character instThrplant;
	private Long lifespanBeginning;
	private Long lifespanEnd;
	private String name;
	private Long occupants;
	private Set<Thermalzone> thermalzones = new HashSet<Thermalzone>(0);
	private Long units;
	private String uuid;
	private Double vertSurf;
	private String volumeSource;
	private Double volumeValue;
	
	public Buildings() {
	}
	
	public Buildings(String uuid, DHeightstatus DHeightstatus, DRefurbishmentlevel DRefurbishmentlevel,
	        DBuildingnature DBuildingnature, HCurrentuse HCurrentuse, HOwnershiptype HOwnershiptype,
	        DElevationreference DElevationreferenceByHeightHeightRef,
	        DElevationreference DElevationreferenceByHeightHeightLow, DBuildingtype DBuildingtype,
	        DElevationreference DElevationreferenceByElevRef, DRooftype DRooftype,
	        DConditionofconstruction DConditionofconstruction, Character connectionElectricity,
	        Character connectionGas, Character connectionSewage, Character connectionThermal,
	        Character connectionWater, Long dateCBeginning, Long dateCEnd, Long dateRBeginning, Long dateREnd,
	        String distFloor, Long floors, Double heightHeightVal, Double HFloor, String identifierIdLoc,
	        String identifierIdName, String identifierIdVers, Character instMeter, Character instPhotov,
	        Character instSolar, Character instThrplant, Long lifespanBeginning, Long lifespanEnd, String name,
	        Long occupants, Long units, Double vertSurf, String volumeSource, Double volumeValue,
	        /* Serializable geometry2d, */Set<BuildingsElevationT> buildingsElevationTs,
	        Set<BuildingsRoofMat> buildingsRoofMats, Set<BuildingsUseMT> buildingsUseMTs,
	        Set<Thermalzone> thermalzones, Set<BuildingsExtRefT> buildingsExtRefTs,
	        Set<BuildingsStructureMat> buildingsStructureMats, Set<Installation> installations,
	        Set<BuildingsEnergyPerformanceT> buildingsEnergyPerformanceTs,
	        Set<BuildingsEnergyamountT> buildingsEnergyamountTs, Set<BuildingsFacadeMat> buildingsFacadeMats,
	        Set<BuildingsRenewablePotentiaT> buildingsRenewablePotentiaTs) {
		this.uuid = uuid;
		this.DHeightstatus = DHeightstatus;
		this.DRefurbishmentlevel = DRefurbishmentlevel;
		this.DBuildingnature = DBuildingnature;
		this.HCurrentuse = HCurrentuse;
		this.HOwnershiptype = HOwnershiptype;
		this.DElevationreferenceByHeightHeightRef = DElevationreferenceByHeightHeightRef;
		this.DElevationreferenceByHeightHeightLow = DElevationreferenceByHeightHeightLow;
		this.DBuildingtype = DBuildingtype;
		this.DElevationreferenceByElevRef = DElevationreferenceByElevRef;
		this.DRooftype = DRooftype;
		this.DConditionofconstruction = DConditionofconstruction;
		this.connectionElectricity = connectionElectricity;
		this.connectionGas = connectionGas;
		this.connectionSewage = connectionSewage;
		this.connectionThermal = connectionThermal;
		this.connectionWater = connectionWater;
		this.dateCBeginning = dateCBeginning;
		this.dateCEnd = dateCEnd;
		this.dateRBeginning = dateRBeginning;
		this.dateREnd = dateREnd;
		this.distFloor = distFloor;
		this.floors = floors;
		this.heightHeightVal = heightHeightVal;
		this.HFloor = HFloor;
		this.identifierIdLoc = identifierIdLoc;
		this.identifierIdName = identifierIdName;
		this.identifierIdVers = identifierIdVers;
		this.instMeter = instMeter;
		this.instPhotov = instPhotov;
		this.instSolar = instSolar;
		this.instThrplant = instThrplant;
		this.lifespanBeginning = lifespanBeginning;
		this.lifespanEnd = lifespanEnd;
		this.name = name;
		this.occupants = occupants;
		this.units = units;
		this.vertSurf = vertSurf;
		this.volumeSource = volumeSource;
		this.volumeValue = volumeValue;
		//this.geometry2d = geometry2d;
		this.buildingsElevationTs = buildingsElevationTs;
		this.buildingsRoofMats = buildingsRoofMats;
		this.buildingsUseMTs = buildingsUseMTs;
		this.thermalzones = thermalzones;
		this.buildingsExtRefTs = buildingsExtRefTs;
		this.buildingsStructureMats = buildingsStructureMats;
		this.installations = installations;
		this.buildingsEnergyPerformanceTs = buildingsEnergyPerformanceTs;
		this.buildingsEnergyamountTs = buildingsEnergyamountTs;
		this.buildingsFacadeMats = buildingsFacadeMats;
		this.buildingsRenewablePotentiaTs = buildingsRenewablePotentiaTs;
	}
	
	public Buildings(String uuid, Serializable geometry2d) {
		this.uuid = uuid;
		//this.geometry2d = geometry2d;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsElevationT> getBuildingsElevationTs() {
		return this.buildingsElevationTs;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "buildings")
	public Set<BuildingsEnergyamountT> getBuildingsEnergyamountTs() {
		return this.buildingsEnergyamountTs;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "buildings")
	public Set<BuildingsEnergyPerformanceT> getBuildingsEnergyPerformanceTs() {
		return this.buildingsEnergyPerformanceTs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsExtRefT> getBuildingsExtRefTs() {
		return this.buildingsExtRefTs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsFacadeMat> getBuildingsFacadeMats() {
		return this.buildingsFacadeMats;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsRenewablePotentiaT> getBuildingsRenewablePotentiaTs() {
		return this.buildingsRenewablePotentiaTs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsRoofMat> getBuildingsRoofMats() {
		return this.buildingsRoofMats;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsStructureMat> getBuildingsStructureMats() {
		return this.buildingsStructureMats;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingsUseMT> getBuildingsUseMTs() {
		return this.buildingsUseMTs;
	}
	
	@Column(name = "CONNECTION_ELECTRICITY", length = 1)
	public Character getConnectionElectricity() {
		return this.connectionElectricity;
	}
	
	@Column(name = "CONNECTION_GAS", length = 1)
	public Character getConnectionGas() {
		return this.connectionGas;
	}
	
	@Column(name = "CONNECTION_SEWAGE", length = 1)
	public Character getConnectionSewage() {
		return this.connectionSewage;
	}
	
	@Column(name = "CONNECTION_THERMAL", length = 1)
	public Character getConnectionThermal() {
		return this.connectionThermal;
	}
	
	@Column(name = "CONNECTION_WATER", length = 1)
	public Character getConnectionWater() {
		return this.connectionWater;
	}
	
	@Column(name = "DATE_C_BEGINNING", precision = 15, scale = 0)
	public Long getDateCBeginning() {
		return this.dateCBeginning;
	}
	
	@Column(name = "DATE_C_END", precision = 15, scale = 0)
	public Long getDateCEnd() {
		return this.dateCEnd;
	}
	
	@Column(name = "DATE_R_BEGINNING", precision = 15, scale = 0)
	public Long getDateRBeginning() {
		return this.dateRBeginning;
	}
	
	@Column(name = "DATE_R_END", precision = 15, scale = 0)
	public Long getDateREnd() {
		return this.dateREnd;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NATURE")
	public DBuildingnature getDBuildingnature() {
		return this.DBuildingnature;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BUILDINGTYPE")
	public DBuildingtype getDBuildingtype() {
		return this.DBuildingtype;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CONDITION")
	public DConditionofconstruction getDConditionofconstruction() {
		return this.DConditionofconstruction;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ELEV_REF")
	public DElevationreference getDElevationreferenceByElevRef() {
		return this.DElevationreferenceByElevRef;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HEIGHT_HEIGHT_LOW")
	public DElevationreference getDElevationreferenceByHeightHeightLow() {
		return this.DElevationreferenceByHeightHeightLow;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HEIGHT_HEIGHT_REF")
	public DElevationreference getDElevationreferenceByHeightHeightRef() {
		return this.DElevationreferenceByHeightHeightRef;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HEIGHT_HEIGHT_STAT")
	public DHeightstatus getDHeightstatus() {
		return this.DHeightstatus;
	}
	
	@Column(name = "DIST_FLOOR", length = 40)
	public String getDistFloor() {
		return this.distFloor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REFURBISH")
	public DRefurbishmentlevel getDRefurbishmentlevel() {
		return this.DRefurbishmentlevel;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROOF_TYPE")
	public DRooftype getDRooftype() {
		return this.DRooftype;
	}
	
	@Column(name = "FLOORS", precision = 15, scale = 0)
	public Long getFloors() {
		return this.floors;
	}
	
	//	@Column(name = "GEOMETRY2D", nullable = false)
	//	public Serializable getGeometry2d() {
	//		return this.geometry2d;
	//	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USE_S")
	public HCurrentuse getHCurrentuse() {
		return this.HCurrentuse;
	}
	
	@Column(name = "HEIGHT_HEIGHT_VAL", precision = 126, scale = 0)
	public Double getHeightHeightVal() {
		return this.heightHeightVal;
	}
	
	@Column(name = "H_FLOOR", precision = 126, scale = 0)
	public Double getHFloor() {
		return this.HFloor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OWNERSHIP")
	public HOwnershiptype getHOwnershiptype() {
		return this.HOwnershiptype;
	}
	
	@Column(name = "IDENTIFIER_ID_LOC", length = 40)
	public String getIdentifierIdLoc() {
		return this.identifierIdLoc;
	}
	
	@Column(name = "IDENTIFIER_ID_NAME", length = 40)
	public String getIdentifierIdName() {
		return this.identifierIdName;
	}
	
	@Column(name = "IDENTIFIER_ID_VERS", length = 40)
	public String getIdentifierIdVers() {
		return this.identifierIdVers;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<Installation> getInstallations() {
		return this.installations;
	}
	
	@Column(name = "INST_METER", length = 1)
	public Character getInstMeter() {
		return this.instMeter;
	}
	
	@Column(name = "INST_PHOTOV", length = 1)
	public Character getInstPhotov() {
		return this.instPhotov;
	}
	
	@Column(name = "INST_SOLAR", length = 1)
	public Character getInstSolar() {
		return this.instSolar;
	}
	
	@Column(name = "INST_THRPLANT", length = 1)
	public Character getInstThrplant() {
		return this.instThrplant;
	}
	
	@Column(name = "LIFESPAN_BEGINNING", precision = 15, scale = 0)
	public Long getLifespanBeginning() {
		return this.lifespanBeginning;
	}
	
	@Column(name = "LIFESPAN_END", precision = 15, scale = 0)
	public Long getLifespanEnd() {
		return this.lifespanEnd;
	}
	
	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}
	
	@Column(name = "OCCUPANTS", precision = 15, scale = 0)
	public Long getOccupants() {
		return this.occupants;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<Thermalzone> getThermalzones() {
		return this.thermalzones;
	}
	
	@Column(name = "UNITS", precision = 15, scale = 0)
	public Long getUnits() {
		return this.units;
	}
	
	@Id
	@Column(name = "UUID", unique = true, nullable = false, length = 70)
	public String getUuid() {
		return this.uuid;
	}
	
	@Column(name = "VERT_SURF", precision = 126, scale = 0)
	public Double getVertSurf() {
		return this.vertSurf;
	}
	
	@Column(name = "VOLUME_SOURCE", length = 40)
	public String getVolumeSource() {
		return this.volumeSource;
	}
	
	@Column(name = "VOLUME_VALUE", precision = 126, scale = 0)
	public Double getVolumeValue() {
		return this.volumeValue;
	}
	
	public void setBuildingsElevationTs(Set<BuildingsElevationT> buildingsElevationTs) {
		this.buildingsElevationTs = buildingsElevationTs;
	}
	
	public void setBuildingsEnergyamountTs(Set<BuildingsEnergyamountT> buildingsEnergyamountTs) {
		this.buildingsEnergyamountTs = buildingsEnergyamountTs;
	}
	
	public void setBuildingsEnergyPerformanceTs(Set<BuildingsEnergyPerformanceT> buildingsEnergyPerformanceTs) {
		this.buildingsEnergyPerformanceTs = buildingsEnergyPerformanceTs;
	}
	
	public void setBuildingsExtRefTs(Set<BuildingsExtRefT> buildingsExtRefTs) {
		this.buildingsExtRefTs = buildingsExtRefTs;
	}
	
	public void setBuildingsFacadeMats(Set<BuildingsFacadeMat> buildingsFacadeMats) {
		this.buildingsFacadeMats = buildingsFacadeMats;
	}
	
	public void setBuildingsRenewablePotentiaTs(Set<BuildingsRenewablePotentiaT> buildingsRenewablePotentiaTs) {
		this.buildingsRenewablePotentiaTs = buildingsRenewablePotentiaTs;
	}
	
	public void setBuildingsRoofMats(Set<BuildingsRoofMat> buildingsRoofMats) {
		this.buildingsRoofMats = buildingsRoofMats;
	}
	
	public void setBuildingsStructureMats(Set<BuildingsStructureMat> buildingsStructureMats) {
		this.buildingsStructureMats = buildingsStructureMats;
	}
	
	public void setBuildingsUseMTs(Set<BuildingsUseMT> buildingsUseMTs) {
		this.buildingsUseMTs = buildingsUseMTs;
	}
	
	public void setConnectionElectricity(Character connectionElectricity) {
		this.connectionElectricity = connectionElectricity;
	}
	
	public void setConnectionGas(Character connectionGas) {
		this.connectionGas = connectionGas;
	}
	
	public void setConnectionSewage(Character connectionSewage) {
		this.connectionSewage = connectionSewage;
	}
	
	public void setConnectionThermal(Character connectionThermal) {
		this.connectionThermal = connectionThermal;
	}
	
	public void setConnectionWater(Character connectionWater) {
		this.connectionWater = connectionWater;
	}
	
	public void setDateCBeginning(Long dateCBeginning) {
		this.dateCBeginning = dateCBeginning;
	}
	
	public void setDateCEnd(Long dateCEnd) {
		this.dateCEnd = dateCEnd;
	}
	
	public void setDateRBeginning(Long dateRBeginning) {
		this.dateRBeginning = dateRBeginning;
	}
	
	public void setDateREnd(Long dateREnd) {
		this.dateREnd = dateREnd;
	}
	
	public void setDBuildingnature(DBuildingnature DBuildingnature) {
		this.DBuildingnature = DBuildingnature;
	}
	
	public void setDBuildingtype(DBuildingtype DBuildingtype) {
		this.DBuildingtype = DBuildingtype;
	}
	
	public void setDConditionofconstruction(DConditionofconstruction DConditionofconstruction) {
		this.DConditionofconstruction = DConditionofconstruction;
	}
	
	public void setDElevationreferenceByElevRef(DElevationreference DElevationreferenceByElevRef) {
		this.DElevationreferenceByElevRef = DElevationreferenceByElevRef;
	}
	
	public void setDElevationreferenceByHeightHeightLow(DElevationreference DElevationreferenceByHeightHeightLow) {
		this.DElevationreferenceByHeightHeightLow = DElevationreferenceByHeightHeightLow;
	}
	
	public void setDElevationreferenceByHeightHeightRef(DElevationreference DElevationreferenceByHeightHeightRef) {
		this.DElevationreferenceByHeightHeightRef = DElevationreferenceByHeightHeightRef;
	}
	
	public void setDHeightstatus(DHeightstatus DHeightstatus) {
		this.DHeightstatus = DHeightstatus;
	}
	
	public void setDistFloor(String distFloor) {
		this.distFloor = distFloor;
	}
	
	public void setDRefurbishmentlevel(DRefurbishmentlevel DRefurbishmentlevel) {
		this.DRefurbishmentlevel = DRefurbishmentlevel;
	}
	
	public void setDRooftype(DRooftype DRooftype) {
		this.DRooftype = DRooftype;
	}
	
	public void setFloors(Long floors) {
		this.floors = floors;
	}
	
	//	public void setGeometry2d(Serializable geometry2d) {
	//		this.geometry2d = geometry2d;
	//	}
	
	public void setHCurrentuse(HCurrentuse HCurrentuse) {
		this.HCurrentuse = HCurrentuse;
	}
	
	public void setHeightHeightVal(Double heightHeightVal) {
		this.heightHeightVal = heightHeightVal;
	}
	
	public void setHFloor(Double HFloor) {
		this.HFloor = HFloor;
	}
	
	public void setHOwnershiptype(HOwnershiptype HOwnershiptype) {
		this.HOwnershiptype = HOwnershiptype;
	}
	
	public void setIdentifierIdLoc(String identifierIdLoc) {
		this.identifierIdLoc = identifierIdLoc;
	}
	
	public void setIdentifierIdName(String identifierIdName) {
		this.identifierIdName = identifierIdName;
	}
	
	public void setIdentifierIdVers(String identifierIdVers) {
		this.identifierIdVers = identifierIdVers;
	}
	
	public void setInstallations(Set<Installation> installations) {
		this.installations = installations;
	}
	
	public void setInstMeter(Character instMeter) {
		this.instMeter = instMeter;
	}
	
	public void setInstPhotov(Character instPhotov) {
		this.instPhotov = instPhotov;
	}
	
	public void setInstSolar(Character instSolar) {
		this.instSolar = instSolar;
	}
	
	public void setInstThrplant(Character instThrplant) {
		this.instThrplant = instThrplant;
	}
	
	public void setLifespanBeginning(Long lifespanBeginning) {
		this.lifespanBeginning = lifespanBeginning;
	}
	
	public void setLifespanEnd(Long lifespanEnd) {
		this.lifespanEnd = lifespanEnd;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public void setOccupants(Long occupants) {
		this.occupants = occupants;
	}
	
	public void setThermalzones(Set<Thermalzone> thermalzones) {
		this.thermalzones = thermalzones;
	}
	
	public void setUnits(Long units) {
		this.units = units;
	}
	
	public void setUuid(String uuid) {
		this.uuid = uuid;
	}
	
	public void setVertSurf(Double vertSurf) {
		this.vertSurf = vertSurf;
	}
	
	public void setVolumeSource(String volumeSource) {
		this.volumeSource = volumeSource;
	}
	
	public void setVolumeValue(Double volumeValue) {
		this.volumeValue = volumeValue;
	}
	
}
