package it.sinergis.gsc.model;

// Generated Aug 5, 2016 5:19:16 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ThermalzoneHeatingsource generated by hbm2java
 */
@Entity
@Table(name = "THERMALZONE_HEATINGSOURCE")
public class ThermalzoneHeatingsource implements java.io.Serializable {
	
	private HEnergysource HEnergysource;
	private ThermalzoneHeatingsourceId id;
	private Thermalzone thermalzone;
	
	public ThermalzoneHeatingsource() {
	}
	
	public ThermalzoneHeatingsource(ThermalzoneHeatingsourceId id, Thermalzone thermalzone, HEnergysource HEnergysource) {
		this.id = id;
		this.thermalzone = thermalzone;
		this.HEnergysource = HEnergysource;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HEATINGSOURCE", nullable = false, insertable = false, updatable = false)
	public HEnergysource getHEnergysource() {
		return this.HEnergysource;
	}
	
	@EmbeddedId
	@AttributeOverrides({
	        @AttributeOverride(name = "uuid", column = @Column(name = "UUID", nullable = false, length = 70)),
	        @AttributeOverride(name = "heatingsource", column = @Column(name = "HEATINGSOURCE", nullable = false, length = 80)) })
	public ThermalzoneHeatingsourceId getId() {
		return this.id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UUID", nullable = false, insertable = false, updatable = false)
	public Thermalzone getThermalzone() {
		return this.thermalzone;
	}
	
	public void setHEnergysource(HEnergysource HEnergysource) {
		this.HEnergysource = HEnergysource;
	}
	
	public void setId(ThermalzoneHeatingsourceId id) {
		this.id = id;
	}
	
	public void setThermalzone(Thermalzone thermalzone) {
		this.thermalzone = thermalzone;
	}
	
}
